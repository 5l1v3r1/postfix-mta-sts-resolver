user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log;

    include       /etc/nginx/mime.types;
	default_type text/plain;
    types_hash_max_size 2048;
	tcp_nopush on;
    tcp_nodelay on;

    # Hide Nginx version number
    server_tokens off;

    gzip on;
    keepalive_timeout 65;
    sendfile on;


    ssl_protocols TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4:!3DES:!kRSA";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    server {
        server_name mta-sts.good.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/good.loc.pem;
        ssl_certificate_key /tmp/certs/good.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy1.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy1.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy1.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "garbage";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy2.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy2.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy2.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy3.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy3.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy3.loc.key;
        location = /.well-known/mta-sts.txt {
            types {
                text/html txt;
            }
            return 200 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy4.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy4.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy4.loc.key;
        location = /.well-known/mta-sts.txt {
            return 404 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy5.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy5.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy5.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: xxx";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy6.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy6.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy6.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: 31557601";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy7.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy7.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy7.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-policy8.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-policy8.loc.pem;
        ssl_certificate_key /tmp/certs/bad-policy8.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: doubt\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-cert1.loc;
        listen 443 ssl;
        ssl_certificate /tmp/bad-certs/bad-cert1.loc.pem;
        ssl_certificate_key /tmp/bad-certs/bad-cert1.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.bad-cert2.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/bad-cert2.loc.pem;
        ssl_certificate_key /tmp/certs/bad-cert2.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmx: mail.loc\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.valid-none.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/valid-none.loc.pem;
        ssl_certificate_key /tmp/certs/valid-none.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: none\nmax_age: 86400";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.testing.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/mta-sts.testing.loc.pem;
        ssl_certificate_key /tmp/certs/mta-sts.testing.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: testing\nmax_age: 86400\nmx: mail.loc\n";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.fast-expire.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/fast-expire.loc.pem;
        ssl_certificate_key /tmp/certs/fast-expire.loc.key;
        location = /.well-known/mta-sts.txt {
            return 200 "version: STSv1\nmode: enforce\nmax_age: 1\nmx: mail.loc\n";
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.chunked-overlength.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/chunked-overlength.loc.pem;
        ssl_certificate_key /tmp/certs/chunked-overlength.loc.key;
        location = /.well-known/mta-sts.txt {
            content_by_lua_block {
                ngx.say("version: STSv1")
                ngx.say("mode: enforce")
                ngx.say("max_age: 86400")
                ngx.say("mx: mail.loc")
                ngx.flush(true)
                for i=0, 2048, 1 do
                    ngx.print("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    ngx.flush(true)
                end
            }
        }
        location / {
            return 404;
        }
    }
    server {
        server_name mta-sts.static-overlength.loc;
        listen 443 ssl;
        ssl_certificate /tmp/certs/static-overlength.loc.pem;
        ssl_certificate_key /tmp/certs/static-overlength.loc.key;
        location = /.well-known/mta-sts.txt {
            lua_http10_buffering off;
            content_by_lua_block {
                ngx.header["content-length"] = "131193"
                ngx.send_headers()
                ngx.say("version: STSv1")
                ngx.say("mode: enforce")
                ngx.say("max_age: 86400")
                ngx.say("mx: mail.loc")
                ngx.flush(true)
                for i=0, 2048, 1 do
                    ngx.print("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    ngx.flush(true)
                end
            }
        }
        location / {
            return 404;
        }
    }
}

